name: Package and Publish NPM

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app:
          - customer-app
          - notifications

    steps:
    # 1. Clonar el repositorio
    - name: Checkout Code
      uses: actions/checkout@v3

    # 2. Configurar Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    # 3. Autenticaci칩n para publicar en GitHub Packages
    - name: Configure NPM Authentication
      run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GHPAT }}" > ~/.npmrc

    # 4. Instalar dependencias
    - name: Install Dependencies
      run: |
        cd ${{ matrix.app }}
        npm install

    # 5. Ejecutar pruebas unitarias
    - name: Run Unit Tests
      run: |
        cd ${{ matrix.app }}
        npm test -- --coverage

    # 6. Cambiar nombre del paquete, versionar y publicar en GitHub Packages
    - name: Publish NPM Package to GitHub Packages
      run: |
        cd ${{ matrix.app }}

        # Establecer nombre personalizado del paquete
        if [ "${{ matrix.app }}" = "customer-app" ]; then
          npm pkg set name="@UPT-FAING-EPIS/customer-app-chambe"
        else
          npm pkg set name="@UPT-FAING-EPIS/notifications-chambe"
        fi

        # Forzar configuraci칩n para publicar en GitHub Packages
        npm pkg set publishConfig.registry="https://npm.pkg.github.com/"

        # Incrementar versi칩n autom치ticamente (parche)
        npm version patch

        # Publicar en GitHub Packages
        npm publish --registry=https://npm.pkg.github.com/
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
